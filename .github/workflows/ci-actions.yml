name: CI

on:
  push:
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  unit-test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn build
      - run: yarn test --coverage --watchAll=false
      - uses: codecov/codecov-action@v1
        with:
          flags: unitests

  visual-test:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' && github.repository_owner == 'project-openubl' }}
    steps:
      - uses: actions/checkout@v1
      - run: yarn install
      - uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

  e2e:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        browser: [chrome, firefox]
    services:
      backend:
        image: quay.io/projectopenubl/xsender-server:master
        ports:
          - 8080:8080
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: yarn install
      - run: yarn build:instrumentation
      - uses: haya14busa/action-cond@v1
        id: define_tags
        with:
          cond: ${{ env.CYPRESS_RECORD_KEY != null }}
          if_true: ${{ matrix.os }}-${{ matrix.browser }}
          if_false: null
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          record: ${{ env.CYPRESS_RECORD_KEY != null }}
          tag: ${{ steps.define_tags.outputs.value }}
          start: yarn run xsender:all
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          config: pageLoadTimeout=100000
          browser: ${{ matrix.browser }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: e2e-screenshots-${{ matrix.os }}-${{ matrix.browser }}
          path: cypress/screenshots
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: e2e-videos-${{ matrix.os }}-${{ matrix.browser }}
          path: cypress/videos
      - uses: codecov/codecov-action@v1
        with:
          flags: e2etests

  e2e-sso:
    runs-on: ubuntu-latest
    # runs-on: ${{ matrix.os }}
    container: node:10.19-jessie
    # strategy:
    #   matrix:
    #     os: [ubuntu-latest]
    #     browser: [chrome, firefox]
    services:
      backend:
        image: quay.io/projectopenubl/xsender-server:master
        ports:
          - 8080:8080
      keycloak:
        image: quay.io/keycloak/keycloak:12.0.1
        ports:
          - 8180:8080
        env:
          KEYCLOAK_USER: admin
          KEYCLOAK_PASSWORD: admin
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: yarn install
      - run: yarn build:sso:instrumentation
      - run: curl http://backend:8080
      - run: curl http://keycloak:8180
      - name: Keycloak Action
        uses: carlosthe19916/keycloak-actions@master
        with:
          server: http://localhost:8180/auth
          username: admin
          password: admin
          cmd: create partialImport -r openubl -s ifResourceExists=FAIL -o -f openubl-realm.json
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          record: false
          start: yarn run xsender:all
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          config: pageLoadTimeout=100000
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          # name: e2e-sso-screenshots-${{ matrix.os }}-${{ matrix.browser }}
          name: e2e-sso-screenshots-sso
          path: cypress/screenshots
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          # name: e2e-sso-videos-${{ matrix.os }}-${{ matrix.browser }}
          name: e2e-sso-videos-sso
          path: cypress/videos

  container-images:
    if: ${{ github.event_name != 'pull_request' && github.repository_owner == 'project-openubl' }}
    runs-on: ubuntu-latest
    needs: [unit-test, visual-test, e2e]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: yarn install
      - run: yarn build
      - name: Push to GitHub Packages
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          registry: docker.pkg.github.com
          name: project-openubl/xsender-server-ui/xsender-server-ui
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: Dockerfile
          snapshot: false
          tags: "master"
      - name: Push to Docker Hub
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: projectopenubl/xsender-server-ui
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: Dockerfile
          snapshot: false
          tags: "master"
      - name: Push to Quay.io
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          registry: quay.io
          name: projectopenubl/xsender-server-ui
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_PASSWORD }}
          dockerfile: Dockerfile
          snapshot: false
          tags: "master"
